// Generated by CoffeeScript 1.3.3
var Main, log, main,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

log = function(x) {
  return console.log(x);
};

Main = (function(_super) {

  __extends(Main, _super);

  function Main() {
    return Main.__super__.constructor.apply(this, arguments);
  }

  Main.prototype.ids = [];

  Main.prototype.initialize = function() {
    var id_nums, num, user,
      _this = this;
    id_nums = (function() {
      var _i, _results;
      _results = [];
      for (num = _i = 1; _i <= 300; num = ++_i) {
        _results.push(num);
      }
      return _results;
    })();
    _.each(id_nums, function(id) {
      return _this.ids.push(id + 10000);
    });
    user = this.createRandomUser();
    mixpanel.people.set(user);
    return mixpanel.people.identify(user.id);
  };

  Main.prototype.registerUsers = function() {
    var users,
      _this = this;
    users = [];
    _.each(this.ids, function(id) {
      return users.push(_this.createRandomUser(id));
    });
    _.each(users, function(user) {
      return mixpanel.register(user);
    });
    return _.each(users, function(user) {
      return mixpanel.people.identify(user.id);
    });
  };

  Main.prototype.createRandomUser = function(id) {
    var user;
    user = {
      "id": String(id)
    };
    user.name = this.randomName();
    user.age = this.randomNum(10, 50);
    user.country = this.randomItem(Data.props.country);
    user.device = this.randomItem(Data.devices);
    return user;
  };

  Main.prototype.randomName = function() {
    var first, last;
    first = this.randomItem(Data.first_names);
    last = this.randomItem(Data.last_names);
    return first + " " + last;
  };

  Main.prototype.randomNum = function(min, max) {
    if (min == null) {
      min = 0;
    }
    if (max == null) {
      max = 100;
    }
    return Math.floor(Math.random() * (max - min + 1)) + min;
  };

  Main.prototype.randomItem = function(list) {
    return list[Math.floor(Math.random() * list.length)];
  };

  Main.prototype.sendEvent = function(args) {};

  return Main;

})(Backbone.View);

main = {};

$(function() {
  return main = new Main();
});
